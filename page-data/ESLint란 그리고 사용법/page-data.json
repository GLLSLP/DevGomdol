{"componentChunkName":"component---src-templates-blog-template-js","path":"/ESLint란 그리고 사용법/","result":{"data":{"cur":{"id":"d2e78ae5-ac7c-5fce-94e9-dde06ea5284e","html":"<h2 id=\"eslint란\" style=\"position:relative;\"><a href=\"#eslint%EB%9E%80\" aria-label=\"eslint란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧊ESLint란?</h2>\n<p>javascript나 typescript의 코드를 실행하지 않고도 오류를 발견해 알려주는 Node.js 패키지이다.</p>\n<h2 id=\"설치방법\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98%EB%B0%A9%EB%B2%95\" aria-label=\"설치방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⛵설치방법</h2>\n<ol>\n<li>ESLint 설치</li>\n</ol>\n<p>아래 명령어중 하나를 골라 설치하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 현재 폴더에 설치하고 싶을 때(package.json의 devDependencies에 추가됨)</span>\r\nnpm i <span class=\"token operator\">-</span>d eslint\r\n\r\n<span class=\"token comment\">// 컴퓨터에 설치하고 싶을 때</span>\r\nnpm i <span class=\"token operator\">-</span>gd eslint</code></pre></div>\n<p>설치된 ESLint의 버전을 확인하고싶으면 아래 명령어를 입력하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 현재 폴더에 설치되어있을 때</span>\r\nnode_modules<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>bin<span class=\"token operator\">/</span>eslint <span class=\"token operator\">-</span>v\r\n\r\n<span class=\"token comment\">// 컴퓨터에 설치되어있을 때</span>\r\neslint <span class=\"token operator\">-</span>v</code></pre></div>\n<ol start=\"2\">\n<li>ESLint 설정파일 만들기 ( .eslintrc.json )</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// 현재 폴더에 설치되어있을 때</span>\r\nnode_modules/.bin/eslint --init\r\n\r\n\r\n<span class=\"token comment\">//컴퓨터에 설치되어있을 때</span>\r\neslint --init\r\n\r\n\r\n&lt;실행시 선택지>\r\n<span class=\"token number\">1</span>. How would you like to use ESLint? ( 어디에 ESLint를 사용하실 건가요? )\r\n\r\n> To check syntax only ( 문법 오류만 체크 )\r\n> To check syntax and find problems ( 문법 오류<span class=\"token punctuation\">,</span> 에러 체크 )\r\n> To check syntax<span class=\"token punctuation\">,</span> find problems<span class=\"token punctuation\">,</span> and enforce code style ( 문법 오류<span class=\"token punctuation\">,</span> 에러 체크<span class=\"token punctuation\">,</span> 코드 예쁘게 정리 )\r\n\r\n\r\n<span class=\"token number\">2</span>. What type of modules does your project use? ( 어떤 타입의 모듈을 사용하실 건가요? )\r\n\r\n> Javascript modules (import/export) ( 자바스크립트 모듈 형식 )\r\n> CommonJS (require/exports) ( 바닐라 자바스크립트 형식 )\r\n> None of these ( 설정안함 )\r\n\r\n\r\n<span class=\"token number\">3</span>. Which framework does your project use? ( 어떤 프레임워크를 사용하시나요? )\r\n\r\n> React\r\n> Vue.js\r\n> None of these ( 설정안함 )\r\n\r\n\r\n<span class=\"token number\">4</span>. Does your project use Typescript? ( 타입스크립트를 사용하시나요? )\r\n\r\n> No / Yes\r\n\r\n\r\n<span class=\"token number\">5</span>. Where does your code run? ( 코드가 어떤 환경에서 실행되나요? )\r\n\r\n> Browser ( 브라우저 )\r\n> Node ( Node.js )\r\n\r\n\r\n<span class=\"token number\">6</span>. What format do you want your config file to be in? ( 설정파일을 어떤 형식으로 만들까요? )\r\n\r\n> Javascript\r\n> YAML\r\n> JSON\r\n\r\n\r\n<span class=\"token number\">7</span>. Would you like to install them now with npm? ( 지금바로 npm으로 설치할까요? )\r\n\r\n> No / Yes</code></pre></div>\n<ol start=\"3\">\n<li>ESLint 적용</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">eslint 적용할파일</code></pre></div>\n<p>이 명령어를 쓰면 해당 파일에 오류가 없는지 검사해준다~!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#eslint%EB%9E%80\">🧊ESLint란?</a></li>\n<li><a href=\"#%EC%84%A4%EC%B9%98%EB%B0%A9%EB%B2%95\">⛵설치방법</a></li>\n</ul>\n</div>","excerpt":"🧊ESLint란? javascript나 typescript의 코드를 실행하지 않고도 오류를 발견해 알려주는 Node.js 패키지이다. ⛵설치방법 ESLint 설치 아래 명령어중 하나를 골라 설치하면 된다. 설치된 ESLint의 버전을 확인하고싶으면 아래 명령어를 입력하면 된다. ESLint 설정파일 만들기 ( .eslintrc.json ) ESLint 적용 이 명령어를 쓰면 해당 파일에 오류가 없는지 검사해준다~! 🧊ESLint란? ⛵설치방법","frontmatter":{"date":"May 06, 2022","title":"ESLint란? +사용법","categories":"Vue","author":"곰덜","emoji":"🌊🦦"},"fields":{"slug":"/ESLint란 그리고 사용법/"}},"next":{"id":"eadc4d12-e6bf-56bf-8e89-99f67c8783aa","html":"<p>블로그를 구글 검색엔진에 노출시키려면 <strong>Google Search Console</strong>이 필요하다.😍</p>\n<p>구글 계정만 있으면 무료로 사용할 수 있다~!💸</p>\n<h2 id=\"google-search-console-사용법\" style=\"position:relative;\"><a href=\"#google-search-console-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"google search console 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚥Google Search Console 사용법</h2>\n<ol>\n<li>\n<p>시작하기🍳</p>\n<p>우선 <a href=\"https://search.google.com/search-console/about?hl=ko\">Google Search Console</a>에 들어가서 ‘시작하기’를 누르면 이런 창이 뜨는데, 자신의 도메인 주소를 ‘URL 접두어’칸에 넣고 ‘계속’을 누른다.👇</p>\n</li>\n</ol>\n<p><img src=\"/081c5bac759577e9243765650aba03cd/220330_01.png\" alt=\"\"></p>\n<ol start=\"2\">\n<li>\n<p>HTML태그 복사🍒</p>\n<p>이 창이 뜨면 ‘HTML 태그’를 클릭해서 내용물을 복사한다.✍</p>\n</li>\n</ol>\n<p><img src=\"/863699a55dacec16c047bdc6ebba396a/220330_02.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>index.jsx에 붙여넣기🐟</li>\n</ol>\n<p>개츠비 블로그가 있는 로컬 폴더에 들어가 <code class=\"language-text\">.\\src\\components\\head\\index.jsx</code>를 열어서 아래 위치에 복사한 내용을 붙여넣기한다.🧐</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Head</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> description<span class=\"token punctuation\">,</span> lang<span class=\"token punctuation\">,</span> meta<span class=\"token punctuation\">,</span> keywords<span class=\"token punctuation\">,</span> title <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>StaticQuery\r\n      query<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>detailsQuery<span class=\"token punctuation\">}</span>\r\n      render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> metaDescription <span class=\"token operator\">=</span>\r\n          description <span class=\"token operator\">||</span> data<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>siteMetadata<span class=\"token punctuation\">.</span>description\r\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Helmet</span></span>\r\n            <span class=\"token attr-name\">htmlAttributes</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\r\n              lang<span class=\"token punctuation\">,</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\r\n            <span class=\"token attr-name\">title</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span></span>\r\n            <span class=\"token attr-name\">titleTemplate</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">%s | </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>siteMetadata<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span>\r\n            <span class=\"token attr-name\">meta</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>\r\n              <span class=\"token comment\">//여기에 아래 내용 추가//</span>\r\n              <span class=\"token punctuation\">{</span>\r\n                <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span>  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">google-site-verification</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n                <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">\"복사한 내용 중 content 부분을 붙여넣기\"</span><span class=\"token punctuation\">,</span>\r\n              <span class=\"token punctuation\">}</span>\r\n              <span class=\"token comment\">/////////////////////</span>\r\n            <span class=\"token punctuation\">]</span>\r\n              <span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>\r\n                keywords<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span>\r\n                  <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\r\n                      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">keywords</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n                      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> keywords<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n                    <span class=\"token punctuation\">}</span>\r\n                  <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n              <span class=\"token punctuation\">)</span>\r\n              <span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\r\n          <span class=\"token punctuation\">/></span></span>\r\n        <span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\r\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li>소유권 확인🌙</li>\n</ol>\n<p><code class=\"language-text\">index.jsx</code>를 수정한 뒤 Github에 푸시하고 Google Search Console페이지로 돌아와 ‘확인’버튼을 누르면 소유권이 확인되었다는 알림이 뜬다!🎵</p>\n<p><img src=\"/d632d479519d82a0d119eb99a8f613af/220330_04.png\" alt=\"\"></p>\n<ol start=\"5\">\n<li>sitemap.xml 입력 후 제출🍭</li>\n</ol>\n<p>왼쪽에 있는 메뉴 중 Sitemaps를 클릭해서 사이트맵 URL을 입력하는 위치에 <code class=\"language-text\">sitemap.xml</code>을 입력하고 제출을 누르면 된다!😋</p>\n<p><img src=\"/eee3b772f0dccb4304029b4c89b4130d/220330_05.png\" alt=\"\"></p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#google-search-console-%EC%82%AC%EC%9A%A9%EB%B2%95\">🚥Google Search Console 사용법</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 30, 2022","title":"블로그를 구글 검색엔진에 등록하는법😎","categories":"Git","author":"곰덜","emoji":"🥕"},"fields":{"slug":"/블로그를 구글 검색엔진에 등록하는법/"}},"prev":{"id":"710dcfae-523c-5dba-850f-fce1ab3f8b30","html":"<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥝문제</h2>\n<p>JWT가 필요한 API를 포스트맨으로 테스트 할때 그냥 보내면 아래처럼 401 Unauthorized 에러가 뜨게 된다.🤔</p>\n<p><img src=\"/87ab5baab664c4326232b93c0106269c/220628_01.png\" alt=\"\"></p>\n<h2 id=\"️해결법\" style=\"position:relative;\"><a href=\"#%EF%B8%8F%ED%95%B4%EA%B2%B0%EB%B2%95\" aria-label=\"️해결법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⭐️해결법</h2>\n<p><strong>Headers에 JWT를 담아야 한다!</strong></p>\n<p>KEY에 <code class=\"language-text\">Authorization</code> 를, VALUE에 <code class=\"language-text\">Bearer 토큰값</code>을 입력하면 된다. (Bearer 뒤에 꼭 한칸 띄어야함!)</p>\n<p><img src=\"/56095add6a4e68d3a321caa9b921ddd1/220628_02.png\" alt=\"\"></p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C\">🥝문제</a></li>\n<li><a href=\"#%EF%B8%8F%ED%95%B4%EA%B2%B0%EB%B2%95\">⭐️해결법</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 28, 2022","title":"JWT사용시 Postman으로 테스트하는법","categories":"JAVA SpringBoot","author":"곰덜","emoji":"🔮"},"fields":{"slug":"/JWT사용시 Postman으로 로그인 테스트하는법/"}},"site":{"siteMetadata":{"siteUrl":"https://www.zoomkoding.com","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/ESLint란 그리고 사용법/","nextSlug":"/블로그를 구글 검색엔진에 등록하는법/","prevSlug":"/JWT사용시 Postman으로 로그인 테스트하는법/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}