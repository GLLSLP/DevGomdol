{"componentChunkName":"component---src-templates-blog-post-js","path":"/Blazor/Dictionary와 Hashtable의 차이점/","result":{"data":{"site":{"siteMetadata":{"title":"개발하는 곰돌이","author":"[Sohyun]","siteUrl":"https://www.gomdol-ooh-ah.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"gomdol"}}},"markdownRemark":{"id":"d079b6b0-f52c-5b4f-853c-f9251a76eb57","excerpt":"Dictionary와 Hashtable은 둘다 key, value 쌍을 가진 컬렉션으로, 같은 기능을 가지고 있다. 근데 Dictionary만 사용하고, Hashtable은 사용하면 안된다. 이유  Hashtable은 Dictionary와의 호환을 위해 남아있긴 하지만 오래된 클래스이다.  Dictionary와 호환이 된다 하더라도 완전히 되는게 아니다. -> (예시) 존재하지 않는 키값을 가져오려고 할때, Hashtable은 null이 발생하고 Dictionary…","html":"<p>Dictionary와 Hashtable은 둘다 key, value 쌍을 가진 컬렉션으로, 같은 기능을 가지고 있다.</p>\n<p>근데 Dictionary만 사용하고, Hashtable은 사용하면 안된다.</p>\n<blockquote>\n<p><strong>이유</strong> </p>\n</blockquote>\n<ol>\n<li>Hashtable은 Dictionary와의 호환을 위해 남아있긴 하지만 오래된 클래스이다. </li>\n<li>Dictionary와 호환이 된다 하더라도 완전히 되는게 아니다.</li>\n</ol>\n<p>-> (예시) 존재하지 않는 키값을 가져오려고 할때, Hashtable은 null이 발생하고 Dictionary는 예외가 발생한다.</p>\n<blockquote>\n<p><strong>결론</strong></p>\n</blockquote>\n<p>Hashtable은 지원을 끊기 전에 유예기간을 주기위해 남겨둔 클래스라서 이미 사용했다면 언젠간 바꾸는것이 좋고 새로운 프로그램에서는 사용하지 않아야 한다.</p>","frontmatter":{"title":"[C#]Dictionary와 Hashtable의 차이점","date":"March 02, 2022"}}},"pageContext":{"slug":"/Blazor/Dictionary와 Hashtable의 차이점/","previous":{"fields":{"slug":"/Git/[Git]오류 Command failed with exit code 1 npm install 해결법/"},"frontmatter":{"title":"오류 Command failed with exit code 1 npm install 해결법"}},"next":{"fields":{"slug":"/Git/[MarkDown]오류 can not read a block mapping entry; a multiline key may not be an implicit key 해결법/"},"frontmatter":{"title":"[MarkDown] 오류 can not read a block mapping entry; a multiline key may not be an implicit key 해결법"}}}},"staticQueryHashes":["2486386679","3128451518"]}