{"componentChunkName":"component---src-templates-blog-post-js","path":"/Vue/[Vue.js]typescript에서 datetimeFormatter 사용하기/","result":{"data":{"site":{"siteMetadata":{"title":"개발하는 곰돌이","author":"[Sohyun]","siteUrl":"https://www.gomdol-ooh-ah.com","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":"gomdol"}}},"markdownRemark":{"id":"bb84d055-e82f-55d6-b648-3e7bf61c6b2b","excerpt":"타입스크립트에서 Date형식을 YYYY-MM-DD형식으로 바꾸고 싶다! 자바스크립트를 쓸땐 common.js를 만든다음 아래 내용을 넣어두면 다른 js파일에서 $datetimeFormatter.로 바로 쓸수 있었는데 타입스크립트에선 그렇게 할 수 없었다.  타입스크립트에서 쓰려면 import를 해준다음  impor한이름.datetimeFormatter()로 써줘야 한다! 역시 타입스크립트는 자바스크립트 특유의 어물쩡~이 안되는것 같다.","html":"<p>타입스크립트에서 Date형식을 YYYY-MM-DD형식으로 바꾸고 싶다!</p>\n<p>자바스크립트를 쓸땐 common.js를 만든다음 아래 내용을 넣어두면 다른 js파일에서 $datetimeFormatter.로 바로 쓸수 있었는데 타입스크립트에선 그렇게 할 수 없었다. </p>\n<pre><code class=\"language-ts\">export default {\n  install(Vue: { prototype: { $dateFormatter: (date: any) => string; $datetimeFormatter: (date: any) => string; $unixDatetimeFormatter: (unixTimestamp: any) => string; $numberFormatter: (number: any) => string; }; }) {\n    Vue.prototype.$dateFormatter = common.dateFormatter;\n    Vue.prototype.$datetimeFormatter = common.datetimeFormatter;\n    Vue.prototype.$unixDatetimeFormatter = common.unixDatetimeFormatter;\n    Vue.prototype.$numberFormatter = common.numberFormatter;\n  }\n};\n\nexport const common = {\n  dateFormatter: (date: string | number | Date) => {\n    const anyDate = new Date(date);\n    if (anyDate) {\n      const yyyy = anyDate.getFullYear();\n      const mm = String(anyDate.getMonth() + 1).padStart(2, \"0\");\n      const dd = String(anyDate.getDate()).padStart(2, \"0\");\n      return yyyy + \"-\" + mm + \"-\" + dd;\n    } else {\n      return \"\";\n    }\n  },\n  datetimeFormatter: (date: string | number | Date) => {\n    const anyDate = new Date(date);\n    if (anyDate) {\n      const yyyy = anyDate.getFullYear();\n      const MM = String(anyDate.getMonth() + 1).padStart(2, \"0\");\n      const dd = String(anyDate.getDate()).padStart(2, \"0\");\n      const HH = String(anyDate.getHours()).padStart(2, \"0\");\n      const mm = String(anyDate.getMinutes()).padStart(2, \"0\");\n      const ss = String(anyDate.getSeconds()).padStart(2, \"0\");\n      return yyyy + \"-\" + MM + \"-\" + dd + \" \" + HH + \":\" + mm + \":\" + ss;\n    } else {\n      return \"\";\n    }\n  },\n</code></pre>\n<p>타입스크립트에서 쓰려면 import를 해준다음  impor한이름.datetimeFormatter()로 써줘야 한다!</p>\n<pre><code class=\"language-ts\">import { common } from \"@/util/common\"\n const datetime = common.datetimeFormatter(strDatetime);\n</code></pre>\n<p>역시 타입스크립트는 자바스크립트 특유의 어물쩡~이 안되는것 같다.</p>","frontmatter":{"title":"[Vue.js]Typescript에서 DateTimeFormatter 사용하기","date":"May 25, 2022"}}},"pageContext":{"slug":"/Vue/[Vue.js]typescript에서 datetimeFormatter 사용하기/","previous":{"fields":{"slug":"/Vue/[Vue.js]v-slot 사용법/"},"frontmatter":{"title":"[Vue.js]v-slot 사용법"}},"next":{"fields":{"slug":"/Vue/[Vue.js]TypeScript의 null, undefined, void, never의 차이/"},"frontmatter":{"title":"[Vue.js]TypeScript의 null, undefined, void, never의 차이"}}}},"staticQueryHashes":["2486386679","3128451518"]}